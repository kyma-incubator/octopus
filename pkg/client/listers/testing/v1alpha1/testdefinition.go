/*

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kyma-incubator/octopus/pkg/apis/testing/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TestDefinitionLister helps list TestDefinitions.
type TestDefinitionLister interface {
	// List lists all TestDefinitions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TestDefinition, err error)
	// TestDefinitions returns an object that can list and get TestDefinitions.
	TestDefinitions(namespace string) TestDefinitionNamespaceLister
	TestDefinitionListerExpansion
}

// testDefinitionLister implements the TestDefinitionLister interface.
type testDefinitionLister struct {
	indexer cache.Indexer
}

// NewTestDefinitionLister returns a new TestDefinitionLister.
func NewTestDefinitionLister(indexer cache.Indexer) TestDefinitionLister {
	return &testDefinitionLister{indexer: indexer}
}

// List lists all TestDefinitions in the indexer.
func (s *testDefinitionLister) List(selector labels.Selector) (ret []*v1alpha1.TestDefinition, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TestDefinition))
	})
	return ret, err
}

// TestDefinitions returns an object that can list and get TestDefinitions.
func (s *testDefinitionLister) TestDefinitions(namespace string) TestDefinitionNamespaceLister {
	return testDefinitionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TestDefinitionNamespaceLister helps list and get TestDefinitions.
type TestDefinitionNamespaceLister interface {
	// List lists all TestDefinitions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TestDefinition, err error)
	// Get retrieves the TestDefinition from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TestDefinition, error)
	TestDefinitionNamespaceListerExpansion
}

// testDefinitionNamespaceLister implements the TestDefinitionNamespaceLister
// interface.
type testDefinitionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TestDefinitions in the indexer for a given namespace.
func (s testDefinitionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TestDefinition, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TestDefinition))
	})
	return ret, err
}

// Get retrieves the TestDefinition from the indexer for a given namespace and name.
func (s testDefinitionNamespaceLister) Get(name string) (*v1alpha1.TestDefinition, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("testdefinition"), name)
	}
	return obj.(*v1alpha1.TestDefinition), nil
}
